AWSTemplateFormatVersion: 2010-09-09

Parameters:
  AppSubnetId:
    Type: "AWS::EC2::Subnet::Id"

  DBSubnetId:
    Type: "AWS::EC2::Subnet::Id"

  VPC:
    Type: "AWS::EC2::VPC::Id"

  KeyPair:
    Type: "AWS::EC2::KeyPair::KeyName"

  OwnerIp:
    Type: String

Resources:
  App:
    Type: "AWS::EC2::Instance"
    Properties:
      SubnetId: !Ref AppSubnetId
      ImageId: ami-0cff7528ff583bf9a
      InstanceType: t2.micro
      KeyName: !Ref KeyPair
      SecurityGroupIds:
        - !Ref PublicHttp
        - !Ref InternalTraffic
        - !Ref PublicSSH
      Tags:
        - Key: Name
          Value: !Sub "App-${AWS::StackName}"
      UserData:
        "Fn::Base64": !Sub |
          #cloud-config
          repo_update: true
          repo_upgrade: all
          packages:
           - httpd
          runcmd:
            - sudo systemctl start httpd
            - sudo systemctl enable httpd
            - sudo mkdir my_simple_app
            - aws s3 cp s3://task-3-bucket-ihor-dynka/simple_app/ my_simple_app --recursive
            - sudo cp -R my_simple_app /var/www/html

  DB:
    Type: "AWS::EC2::Instance"
    Properties:
      SubnetId: !Ref DBSubnetId
      ImageId: ami-0cff7528ff583bf9a
      InstanceType: t2.micro
      KeyName: !Ref KeyPair
      SecurityGroupIds:
        - !Ref InternalTraffic
      Tags:
        - Key: Name
          Value: !Sub "DB-${AWS::StackName}"

  PublicHttp:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      VpcId: !Ref VPC
      SecurityGroupIngress:
        CidrIp: !Ref OwnerIp
        FromPort: "80"
        ToPort: "80"
        IpProtocol: tcp
      GroupDescription: public access

  PublicSSH:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      VpcId: !Ref VPC
      SecurityGroupIngress:
        CidrIp: !Ref OwnerIp
        FromPort: "22"
        ToPort: "22"
        IpProtocol: tcp
      GroupDescription: public ssh access

  InternalTraffic:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      VpcId: !Ref VPC
      GroupDescription: internal access

  InternalTrafficRule:
    Type: "AWS::EC2::SecurityGroupIngress"
    Properties:
      GroupId: !Ref InternalTraffic
      IpProtocol: All
      SourceSecurityGroupId: !GetAtt
        - InternalTraffic
        - GroupId
